trigger:
  - main

pr:
  - main

pool:
  vmImage: ubuntu-latest

jobs:
  - job: Build
    strategy:
      matrix:
        Python38:
          python.version: '3.8'
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
        Python311:
          python.version: '3.11'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'
      # Run tox
      - script: |
          python -m pip install --upgrade pip
          pip install tox
        displayName: 'Install dependencies'
      - script: 'tox'
        displayName: Run Tox
      # Publish test results and code coverage report
      - task: PublishTestResults@2
        displayName: Publish test results
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '$(Build.SourcesDirectory)/junit/test_results.xml'
      - task: PublishCodeCoverageResults@1
        displayName: Publish code coverage results
        inputs:
          codeCoverageTool: 'cobertura'
          summaryFileLocation: '$(Build.SourcesDirectory)/junit/coverage-reports/coverage.xml'
          pathToSources: '$(Build.SourcesDirectory)/src/'
      # Publish test results and code coverage report artifacts for later use in Sonar scan
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.SourcesDirectory)/junit/'
          artifactName: 'junit_$(python.version)'
  - job: SonarScan
    displayName: SonarCloud Analysis
    dependsOn: Build
    steps:
      # Setup SonarCloud analysis
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'mzuber'
          scannerMode: 'CLI'
          configMode: 'file'
          configFile: 'sonar-project.properties'
      # Download test results and code coverage report artifacts created in build job
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: junit_3.10
          path: '$(Build.SourcesDirectory)/junit'
      # Run SonarCloud analysis
      - task: SonarCloudAnalyze@1
